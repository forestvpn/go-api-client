// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/forestvpn/go-api-client/node/models"
)

// InterfaceListReader is a Reader for the InterfaceList structure.
type InterfaceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InterfaceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInterfaceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewInterfaceListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewInterfaceListOK creates a InterfaceListOK with default headers values
func NewInterfaceListOK() *InterfaceListOK {
	return &InterfaceListOK{}
}

/* InterfaceListOK describes a response with status code 200, with default header values.

ok
*/
type InterfaceListOK struct {
	Payload []*models.InterfaceSpec
}

func (o *InterfaceListOK) Error() string {
	return fmt.Sprintf("[GET /interfaces/][%d] interfaceListOK  %+v", 200, o.Payload)
}
func (o *InterfaceListOK) GetPayload() []*models.InterfaceSpec {
	return o.Payload
}

func (o *InterfaceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInterfaceListDefault creates a InterfaceListDefault with default headers values
func NewInterfaceListDefault(code int) *InterfaceListDefault {
	return &InterfaceListDefault{
		_statusCode: code,
	}
}

/* InterfaceListDefault describes a response with status code -1, with default header values.

error
*/
type InterfaceListDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the interface list default response
func (o *InterfaceListDefault) Code() int {
	return o._statusCode
}

func (o *InterfaceListDefault) Error() string {
	return fmt.Sprintf("[GET /interfaces/][%d] InterfaceList default  %+v", o._statusCode, o.Payload)
}
func (o *InterfaceListDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *InterfaceListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
